name: Java CI with Maven

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write
  actions: read
  checks: write

jobs:
  build:
    name: Build On
    strategy:
      max-parallel: 4
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Clone code from repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Cache m2 dependencies
        uses: actions/cache@v4
        with:
          path: .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Enable Debugging
        if: matrix.os == 'macos-latest'
        run: |
          set -x

      - name: Enable Gatekeeper
        if: matrix.os == 'macos-latest'
        run: |
          sudo spctl --master-enable

      - name: Update /etc/hosts
        if: matrix.os == 'macos-latest'
        run: |
          echo "127.0.0.1 localhost" | sudo tee -a /etc/hosts

      - name: Verify DNS Configuration
        if: matrix.os == 'macos-latest'
        run: |
          cat /etc/resolv.conf
          scutil --dns

      - name: Install Firefox
        if: matrix.os == 'macos-latest'
        run: |
         brew install --cask firefox
         firefox --version

      - name: Install GeckoDriver
        if: matrix.os == 'macos-latest'
        run: |
          echo "Installing GeckoDriver..."
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "GeckoDriver Version: $GECKODRIVER_VERSION"
          curl -L -o geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-macos.tar.gz
          tar -xzf geckodriver.tar.gz -C /usr/local/bin
          rm geckodriver.tar.gz
          geckodriver --version

      - name: Test with Maven
        run: |
          for i in 1 2 3; do mvn test && break || sleep 10; done
        env:
          CHROME_OPTIONS: --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080
          CI_RUN: true

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
